import { IsArray, IsBoolean, IsISO8601, IsEnum, IsJSON, IsNotEmpty, IsNumber, IsObject, IsOptional, IsPositive, IsString, Matches } from "class-validator";
import { AmountReference, InvoiceReference, InvoiceStatus, QuoteReference, QuoteStatus } from "@blockspaces/shared/models/lightning/Invoice";
import { ApiProperty, ApiPropertyOptional } from "@nestjs/swagger";
import { SupportedCurrencies } from "@blockspaces/shared/models/lightning/Currencies";

export class BipApiAmountReference implements Partial<AmountReference> {
  @IsNumber()
  @ApiProperty({ description: 'The invoice amount in the selected currency' })
  fiatValue: number;

  @IsString()
  @ApiProperty({ enum: Object.values(SupportedCurrencies), description: 'Currency' })
  currency: string;

  @IsNumber()
  @ApiPropertyOptional({ description: 'The Bitcoin value of the fiat currency based on the exchange rate' })
  btcValue?: number;

  @IsNumber()
  @ApiPropertyOptional({ description: 'The exchange rate for the transaction' })
  exchangeRate?: number;
}

export class BipApiInvoiceRequest {
  @IsString()
  @IsNotEmpty()
  @ApiProperty({ enum: Object.values(SupportedCurrencies), description: 'Invoice Currency' })
  currency: string;

  @IsNumber()
  @IsNotEmpty()
  @ApiProperty({ description: 'Invoice Amount in selected currency' })
  amount: number;

  @IsString()
  @ApiProperty({ description: 'Optional memo field to be included on the payment request' })
  memo: string;

  @IsString()
  @IsNotEmpty()
  @ApiProperty({ description: 'The BlockSpaces Tenant ID to request to send payment to' })
  tenant_id: string;
}

export class BipApiInvoiceRequestResponse implements Omit<Partial<QuoteReference>, 'quoteId' | 'amount'> {

  @IsString()
  @ApiProperty({ description: 'The invoice id created to reference for getting an updated status' })
  invoiceId: string;

  @IsString()
  @ApiProperty({ description: 'The BlockSpaces Tenant ID requested for the payment request' })
  tenantId: string;

  @IsString()
  @ApiProperty({ description: 'The Bolt11 Payment Request' })
  paymentRequest: string;

  @IsString()
  @ApiProperty({ description: 'The number of seconds the payment request will expire in' })
  expiration: number;

  @IsString()
  @IsEnum(Object.values(QuoteStatus))
  @ApiProperty({ description: 'The invoice status' })
  status: QuoteStatus;

  @IsObject()
  @ApiProperty({ type: BipApiAmountReference, description: 'The invoice amount' })
  amount: Partial<BipApiAmountReference>;

}

export class BipApiInvoiceStatusRequest {
  @IsString()
  @IsNotEmpty()
  @ApiProperty({ description: 'Invoice ID generated by the create invoice request' })
  invoice_id: string;

  @IsString()
  @IsNotEmpty()
  @ApiProperty({ description: 'The BlockSpaces Tenant ID to request to send payment to' })
  tenant_id: string;
}

export class BipApiInvoiceStatusResponse implements Partial<InvoiceReference> {
  @IsString()
  @IsNotEmpty()
  @ApiProperty({ description: 'Invoice ID generated by the create invoice request' })
  invoiceId: string;

  @IsString()
  @IsNotEmpty()
  @ApiProperty({ description: 'The BlockSpaces Tenant ID to request to send payment to' })
  tenantId: string; // Passed in the Params of the endpoint or in the body of the create and Update calls..

  @IsString()
  @IsNotEmpty()
  @ApiProperty({ description: 'Description of the payment' })
  description: string;

  @IsString()
  @IsNotEmpty()
  @IsEnum(Object.values(InvoiceStatus))
  @ApiProperty({ description: 'The BlockSpaces Tenant ID to request to send payment to' })
  status: InvoiceStatus;

  @IsObject()
  @ApiProperty({ description: 'The invoice amount' })
  amount: BipApiAmountReference;

  @IsNumber()
  @ApiProperty({ description: 'The timestamp of the settled payment request' })
  settleTimestamp?: number;

  @IsString()
  @ApiProperty({ description: 'The payment request that was paid' })
  settledPayreq?: string;
}